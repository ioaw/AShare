# Package Node.js project into executable and auto-upload binary release assets

name: Release

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-16.04

    strategy:
      matrix:
        platform: [linux, win, alpine, macos]
        arch: [x64, x86]
        exclude:
          # excludes x86 on alpine and macos
          - arch: x86
            platform: alpine
          - arch: x86
            platform: macos
        include:
          - platform: linux
            artifact_name: AShare
            asset_name: AShare_${{ matrix.platform }}_${{ matrix.arch }}
          - platform: win
            artifact_name: AShare.exe
            asset_name: AShare_${{ matrix.platform }}_${{ matrix.arch }}
          - platform: alpine
            artifact_name: AShare
            asset_name: AShare_${{ matrix.platform }}_${{ matrix.arch }}
          - platform: macos
            artifact_name: AShare
            asset_name: AShare_${{ matrix.platform }}_${{ matrix.arch }}

    env:
      _PLATFORM: ${{ matrix.platform }}
      _ARCH: ${{ matrix.arch }}
      _ARTIFACT_NAME: ${{ matrix.artifact_name }}
      _ASSET_NAME: ${{ matrix.asset_name }}

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "PLATFORM=$_PLATFORM" >> $GITHUB_ENV
          echo "ARCH=$_ARCH" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$_ARTIFACT_NAME" >> $GITHUB_ENV
          echo "ASSET_NAME=$_ASSET_NAME" >> $GITHUB_ENV

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm install

      - name: Install "pkg"
        run: npm install -g pkg

      - name: Package Node.js project into an executable (${{ matrix.platform }}_${{ matrix.arch }})
        run: |
          mkdir build_assets
          pkg . -t node14-${{ env.PLATFORM }}-${{ env.ARCH }} --output build_assets/${{ env.ARTIFACT_NAME }}

      - name: Create archive files
        run: |
          mkdir release
          if [ ${{ env.PLATFORM }} = 'win' ]; then
            zip -j ${{ env.ASSET_NAME }}.zip build_assets/${{ env.ARTIFACT_NAME }}
            mv *.zip release
          else
            tar -zcvf ${{ env.ASSET_NAME }}.tar.gz -C build_assets ${{ env.ARTIFACT_NAME }}
            mv *.tar.gz release
          fi

      - name: Upload binary files to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}
          path: build_assets/${{ env.ARTIFACT_NAME }}

      - name: Upload binary files to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: release/${{ env.ASSET_NAME }}.*
          tag: v0.01
          overwrite: true
